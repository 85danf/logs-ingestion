version: '3'
services:

  zookeeper:
    image: zookeeper:3.4.9
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    volumes:
      - ./data/zookeeper/data:/data
      - ./data/zookeeper/datalog:/datalog
    networks:
      - kafka_net

  kafka1:
    image: confluentinc/cp-kafka:5.3.0
    container_name: kafka1
    hostname: kafka1
    ports:
      - "9091:9091"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19091,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./data/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zookeeper
    networks:
      - kafka_net

#  kafka2:
#    image: confluentinc/cp-kafka:5.3.0
#    container_name: kafka2
#    hostname: kafka2
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka2:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_BROKER_ID: 2
#    volumes:
#      - ./data/kafka2/data:/var/lib/kafka/data
#    depends_on:
#      - zookeeper

#    networks:
#      - kafka_net

#  kafka3:
#    image: confluentinc/cp-kafka:5.3.0
#    hostname: kafka3
#    container_name: kafka3
#    ports:
#      - "9093:9093"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka3:19093,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
#      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
#      KAFKA_BROKER_ID: 3
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    volumes:
#      - ./data/kafka3/data:/var/lib/kafka/data
#    depends_on:
#      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka1:19091"
    depends_on:
      - kafka1
#      - kafka2
#      - kafka3
    networks:
      - kafka_net

  elastic1:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: elastic1
    hostname: elastic1
    environment:
#      - node.name=elastic1
#      - cluster.name=es-docker-cluster
#      - discovery.seed_hosts=elastic2
#      - cluster.initial_master_nodes=elastic1,elastic2
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./data/elastic1/data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - elastic_net

#  elastic2:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
#    container_name: elastic2
#    hostname: elastic2
#    environment:
#      - node.name=elastic2
#      - cluster.name=es-docker-cluster
#      - discovery.seed_hosts=elastic1
#      - cluster.initial_master_nodes=elastic1,elastic2
#      - bootstrap.memory_lock=true
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    volumes:
#      - ./data/elastic2/data:/usr/share/elasticsearch/data
#    ports:
#      - 9201:9201
#    networks:
#      - elastic_net

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    container_name: kibana
    hostname: kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elastic1:9200
      ELASTICSEARCH_HOSTS: http://elastic1:9200
    depends_on:
      - elastic1
#      - elastic2
    networks:
      - elastic_net

networks:
  kafka_net:
    driver: bridge
  elastic_net:
    driver: bridge